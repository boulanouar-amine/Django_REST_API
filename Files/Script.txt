/*==============================================================*/
/* Table : APPARTENIR                                           */
/*==============================================================*/
create table APPARTENIR
(
   CODECLASSE           int not null,
   NUMINSCRIPTION       int not null,
   primary key (CODECLASSE, NUMINSCRIPTION)
);

/*==============================================================*/
/* Table : ASSURER                                              */
/*==============================================================*/
create table ASSURER
(
   CODEELMODULE         int not null,
   CODEENSEIGNANT       int not null,
   TYPECOURS            varchar(30) not null,
   CODECLASSE           int not null,
   VHGLOBAL             varchar(50),
   primary key (CODEELMODULE, CODEENSEIGNANT, TYPECOURS, CODECLASSE)
);

/*==============================================================*/
/* Table : CLASSE                                               */
/*==============================================================*/
create table CLASSE
(
   CODECLASSE           int not null,
   NATURECLASSE         varchar(30),
   primary key (CODECLASSE)
);

/*==============================================================*/
/* Table : DEPARTEMENT                                          */
/*==============================================================*/
create table DEPARTEMENT
(
   CODEDEPT             int not null,
   CODEENSEIGNANT       int not null,
   ENS_CODEENSEIGNANT   int not null,
   LIBELLEDEPT          varchar(30),
   DATECREATION         date,
   primary key (CODEDEPT)
);

/*==============================================================*/
/* Table : ELEMENTMODULE                                        */
/*==============================================================*/
create table ELEMENTMODULE
(
   CODEELMODULE         int not null,
   CODEMODULE           int not null,
   LIBELLEELMODULE      varchar(50),
   COEFFICIENT          int,
   VH_CM                int,
   VH_TD                int,
   VH_TP                int,
   VH_EC                int,
   primary key (CODEELMODULE)
);

/*==============================================================*/
/* Table : ENSEIGNANT                                           */
/*==============================================================*/
create table ENSEIGNANT
(
   CODEENSEIGNANT       int not null,
   CODEFILIERE          int not null,
   FIL_CODEFILIERE      int not null,
   CODEDEPT             int not null,
   DEP_CODEDEPT         int not null,
   DEP_CODEDEPT2        int not null,
   NOMENSEIGNANT        varchar(50),
   PRENOMENSEIGNANT     varchar(50),
   TEL                  varchar(10),
   EMAIL                varchar(150),
   PHOTO                longblob,
   primary key (CODEENSEIGNANT)
);

/*==============================================================*/
/* Table : ESTINSCRIT                                           */
/*==============================================================*/
create table ESTINSCRIT
(
   NUMINSCRIPTION       int not null,
   CODEELMODULE         int not null,
   primary key (NUMINSCRIPTION, CODEELMODULE)
);

/*==============================================================*/
/* Table : ETUDIANT                                             */
/*==============================================================*/
create table ETUDIANT
(
   NUMINSCRIPTION       int not null,
   NOMETUDIANT          varchar(30),
   PRENOMETUDIANT       varchar(30),
   primary key (NUMINSCRIPTION)
);

/*==============================================================*/
/* Table : FILIERE                                              */
/*==============================================================*/
create table FILIERE
(
   CODEFILIERE          int not null,
   CODEDEPT             int not null,
   CODEENSEIGNANT       int not null,
   ENS_CODEENSEIGNANT   int not null,
   INTITULEFILIERE      varchar(50) not null,
   DATEACCREDITATION    date,
   DUREEACCREDITATION   varchar(30),
   primary key (CODEFILIERE)
);

/*==============================================================*/
/* Table : INFOSURETUDIANT                                      */
/*==============================================================*/
create table INFOSURETUDIANT
(
   NUMINSCRIPTION       int not null,
   ETU_NUMINSCRIPTION   int not null,
   DATENAISSANCE        date,
   DATEOBTENTIONBAC     date,
   TYPEBAC              varchar(30),
   MENTION              varchar(30),
   LYCEE                varchar(50),
   ACADEMIE             varchar(50),
   TELEPHONEMOBILE      varchar(10),
   EMAIL                varchar(150),
   VILLENAISSANCE       varchar(50),
   VILLERESIDENCE       varchar(50),
   ADRESSE              varchar(150),
   CODEPOSTAL           int,
   NATIONALITE          varchar(30),
   PHOTO                longblob
);

/*==============================================================*/
/* Table : MODULE                                               */
/*==============================================================*/
create table MODULE
(
   CODEMODULE           int not null,
   CODEFILIERE          int not null,
   IDSEMESTRE           int not null,
   CODEENSEIGNANT       int not null,
   LIBELLEMODULE        varchar(50),
   NATUREMODULE         varchar(50),
   primary key (CODEMODULE)
);

/*==============================================================*/
/* Table : NATURECOURS                                          */
/*==============================================================*/
create table NATURECOURS
(
   TYPECOURS            varchar(30) not null,
   NBETUDIANTMAX        int,
   primary key (TYPECOURS)
);

/*==============================================================*/
/* Table : OBTENIR                                              */
/*==============================================================*/
create table OBTENIR
(
   CODEELMODULE         int not null,
   NUMSESSION           int not null,
   NUMINSCRIPTION       int not null,
   NOTE                 int,
   primary key (CODEELMODULE, NUMSESSION, NUMINSCRIPTION)
);

/*==============================================================*/
/* Table : RESERVATION                                          */
/*==============================================================*/
create table RESERVATION
(
   DATEHORAIRE          date not null,
   HEUREDEBUT           time not null,
   CODEENSEIGNANT       int not null,
   TYPECOURS            varchar(30) not null,
   CODEELMODULE         int not null,
   IDSALLE              int not null,
   HEUREFIN             time,
   primary key (DATEHORAIRE, HEUREDEBUT),
   key AK_PK_DATEHORAIRE (DATEHORAIRE, HEUREDEBUT)
);

/*==============================================================*/
/* Table : SALLE                                                */
/*==============================================================*/
create table SALLE
(
   IDSALLE              int not null,
   CAPACITE             int,
   TYPEUTILISATION      varchar(50),
   BATIMENT             varchar(50),
   primary key (IDSALLE)
);

/*==============================================================*/
/* Table : SEMAINES                                             */
/*==============================================================*/
create table SEMAINES
(
   NUMSEMAINE           int not null,
   NATURESEMAINE        varchar(50),
   DATELUNDI            date,
   primary key (NUMSEMAINE)
);

/*==============================================================*/
/* Table : SEMESTRE                                             */
/*==============================================================*/
create table SEMESTRE
(
   IDSEMESTRE           int not null,
   LIBELLESEMESTRE      varchar(30),
   NIVEAU               varchar(30),
   primary key (IDSEMESTRE)
);

/*==============================================================*/
/* Table : SESSION                                              */
/*==============================================================*/
create table SESSION
(
   NUMSESSION           int not null,
   LIBELLESESSION       varchar(50),
   primary key (NUMSESSION)
);

/*==============================================================*/
/* Table : SE_PRODUIRE                                          */
/*==============================================================*/
create table SE_PRODUIRE
(
   CODEFILIERE          int not null,
   IDTYPEEVENEMENT      int not null,
   IDSEMESTRE           int not null,
   NUMSEMAINE           int not null,
   DATEEVT              date,
   DUREEEVT             varchar(30),
   primary key (CODEFILIERE, IDTYPEEVENEMENT, IDSEMESTRE, NUMSEMAINE)
);

/*==============================================================*/
/* Table : SUIVRE                                               */
/*==============================================================*/
create table SUIVRE
(
   DATEHORAIRE          date not null,
   HEUREDEBUT           time not null,
   CODECLASSE           int not null,
   primary key (DATEHORAIRE, HEUREDEBUT, CODECLASSE)
);

/*==============================================================*/
/* Table : S_ABSENTER                                           */
/*==============================================================*/
create table S_ABSENTER
(
   DATEHORAIRE          date not null,
   HEUREDEBUT           time not null,
   NUMINSCRIPTION       int not null,
   primary key (DATEHORAIRE, HEUREDEBUT, NUMINSCRIPTION)
);

/*==============================================================*/
/* Table : TYPEEVENEMENT                                        */
/*==============================================================*/
create table TYPEEVENEMENT
(
   IDTYPEEVENEMENT      int not null,
   NATUREEVENEMENT      varchar(50),
   DESCRIPTION          varchar(200),
   primary key (IDTYPEEVENEMENT)
);

alter table APPARTENIR add constraint FK_APPARTENIR foreign key (NUMINSCRIPTION)
      references ETUDIANT (NUMINSCRIPTION) on delete restrict on update restrict;

alter table APPARTENIR add constraint FK_APPARTENIR2 foreign key (CODECLASSE)
      references CLASSE (CODECLASSE) on delete restrict on update restrict;

alter table ASSURER add constraint FK_ASSURER foreign key (CODECLASSE)
      references CLASSE (CODECLASSE) on delete restrict on update restrict;

alter table ASSURER add constraint FK_ASSURER2 foreign key (CODEELMODULE)
      references ELEMENTMODULE (CODEELMODULE) on delete restrict on update restrict;

alter table ASSURER add constraint FK_ASSURER3 foreign key (CODEENSEIGNANT)
      references ENSEIGNANT (CODEENSEIGNANT) on delete restrict on update restrict;

alter table ASSURER add constraint FK_ASSURER4 foreign key (TYPECOURS)
      references NATURECOURS (TYPECOURS) on delete restrict on update restrict;

alter table DEPARTEMENT add constraint FK_DEVENIRRESPONSABLE foreign key (ENS_CODEENSEIGNANT)
      references ENSEIGNANT (CODEENSEIGNANT) on delete restrict on update restrict;

alter table DEPARTEMENT add constraint FK_DEVENIRRESPONSABLE2 foreign key (CODEENSEIGNANT)
      references ENSEIGNANT (CODEENSEIGNANT) on delete restrict on update restrict;

alter table ELEMENTMODULE add constraint FK_COMPOSER foreign key (CODEMODULE)
      references MODULE (CODEMODULE) on delete restrict on update restrict;

alter table ENSEIGNANT add constraint FK_COORDONNER3 foreign key (CODEFILIERE)
      references FILIERE (CODEFILIERE) on delete restrict on update restrict;

alter table ENSEIGNANT add constraint FK_COORDONNER4 foreign key (FIL_CODEFILIERE)
      references FILIERE (CODEFILIERE) on delete restrict on update restrict;

alter table ENSEIGNANT add constraint FK_DEVENIRRESPONSABLE3 foreign key (DEP_CODEDEPT)
      references DEPARTEMENT (CODEDEPT) on delete restrict on update restrict;

alter table ENSEIGNANT add constraint FK_DEVENIRRESPONSABLE4 foreign key (DEP_CODEDEPT2)
      references DEPARTEMENT (CODEDEPT) on delete restrict on update restrict;

alter table ENSEIGNANT add constraint FK_INTEGRER foreign key (CODEDEPT)
      references DEPARTEMENT (CODEDEPT) on delete restrict on update restrict;

alter table ESTINSCRIT add constraint FK_ESTINSCRIT foreign key (CODEELMODULE)
      references ELEMENTMODULE (CODEELMODULE) on delete restrict on update restrict;

alter table ESTINSCRIT add constraint FK_ESTINSCRIT2 foreign key (NUMINSCRIPTION)
      references ETUDIANT (NUMINSCRIPTION) on delete restrict on update restrict;

alter table ETUDIANT add constraint FK_CONCERNER3 foreign key ()
      references INFOSURETUDIANT on delete restrict on update restrict;

alter table ETUDIANT add constraint FK_CONCERNER4 foreign key ()
      references INFOSURETUDIANT on delete restrict on update restrict;

alter table FILIERE add constraint FK_COORDONNER foreign key (ENS_CODEENSEIGNANT)
      references ENSEIGNANT (CODEENSEIGNANT) on delete restrict on update restrict;

alter table FILIERE add constraint FK_COORDONNER2 foreign key (CODEENSEIGNANT)
      references ENSEIGNANT (CODEENSEIGNANT) on delete restrict on update restrict;

alter table FILIERE add constraint FK_ESTATTACHEE foreign key (CODEDEPT)
      references DEPARTEMENT (CODEDEPT) on delete restrict on update restrict;

alter table INFOSURETUDIANT add constraint FK_CONCERNER foreign key (ETU_NUMINSCRIPTION)
      references ETUDIANT (NUMINSCRIPTION) on delete restrict on update restrict;

alter table INFOSURETUDIANT add constraint FK_CONCERNER2 foreign key (NUMINSCRIPTION)
      references ETUDIANT (NUMINSCRIPTION) on delete restrict on update restrict;

alter table MODULE add constraint FK_ESTRESPONSABLE foreign key (CODEENSEIGNANT)
      references ENSEIGNANT (CODEENSEIGNANT) on delete restrict on update restrict;

alter table MODULE add constraint FK_FAIREPARTIE foreign key (CODEFILIERE)
      references FILIERE (CODEFILIERE) on delete restrict on update restrict;

alter table MODULE add constraint FK_SE_FAIRE foreign key (IDSEMESTRE)
      references SEMESTRE (IDSEMESTRE) on delete restrict on update restrict;

alter table OBTENIR add constraint FK_OBTENIR foreign key (NUMINSCRIPTION)
      references ETUDIANT (NUMINSCRIPTION) on delete restrict on update restrict;

alter table OBTENIR add constraint FK_OBTENIR2 foreign key (CODEELMODULE)
      references ELEMENTMODULE (CODEELMODULE) on delete restrict on update restrict;

alter table OBTENIR add constraint FK_OBTENIR3 foreign key (NUMSESSION)
      references SESSION (NUMSESSION) on delete restrict on update restrict;

alter table RESERVATION add constraint FK_A_LIEU foreign key (IDSALLE)
      references SALLE (IDSALLE) on delete restrict on update restrict;

alter table RESERVATION add constraint FK_DISPENSER foreign key (CODEENSEIGNANT)
      references ENSEIGNANT (CODEENSEIGNANT) on delete restrict on update restrict;

alter table RESERVATION add constraint FK_ESTDETYPE foreign key (TYPECOURS)
      references NATURECOURS (TYPECOURS) on delete restrict on update restrict;

alter table RESERVATION add constraint FK_SE_DEROULER foreign key (CODEELMODULE)
      references ELEMENTMODULE (CODEELMODULE) on delete restrict on update restrict;

alter table SE_PRODUIRE add constraint FK_SE_PRODUIRE foreign key (NUMSEMAINE)
      references SEMAINES (NUMSEMAINE) on delete restrict on update restrict;

alter table SE_PRODUIRE add constraint FK_SE_PRODUIRE2 foreign key (CODEFILIERE)
      references FILIERE (CODEFILIERE) on delete restrict on update restrict;

alter table SE_PRODUIRE add constraint FK_SE_PRODUIRE3 foreign key (IDTYPEEVENEMENT)
      references TYPEEVENEMENT (IDTYPEEVENEMENT) on delete restrict on update restrict;

alter table SE_PRODUIRE add constraint FK_SE_PRODUIRE4 foreign key (IDSEMESTRE)
      references SEMESTRE (IDSEMESTRE) on delete restrict on update restrict;

alter table SUIVRE add constraint FK_SUIVRE foreign key (CODECLASSE)
      references CLASSE (CODECLASSE) on delete restrict on update restrict;

alter table SUIVRE add constraint FK_SUIVRE2 foreign key (DATEHORAIRE, HEUREDEBUT)
      references RESERVATION (DATEHORAIRE, HEUREDEBUT) on delete restrict on update restrict;

alter table S_ABSENTER add constraint FK_S_ABSENTER foreign key (NUMINSCRIPTION)
      references ETUDIANT (NUMINSCRIPTION) on delete restrict on update restrict;

alter table S_ABSENTER add constraint FK_S_ABSENTER2 foreign key (DATEHORAIRE, HEUREDEBUT)
      references RESERVATION (DATEHORAIRE, HEUREDEBUT) on delete restrict on update restrict;
